{
  config,
  lib,
  pkgs,
  inputs,
  ...
}: {
  imports = [
    # Hardware configuration (generated by nixos-generate-config)
    ./hardware-configuration.nix
    # NVIDIA configuration for RTX 5090
    ../../modules/desktop/nvidia.nix
    # Tailscale VPN for remote access
    ../../modules/desktop/tailscale.nix
    # Machine learning environment with Docker
    #../../modules/desktop/machine-learning.nix
    # RTX 5090 optimized AI configuration
    # ../../modules/desktop/rtx5090-ai.nix
    # Keep LM Studio for GUI option
    # ../../modules/desktop/lmstudio.nix
  ];

  # Boot loader
  boot.loader = {
    systemd-boot.enable = true;
    efi.canTouchEfiVariables = true;
    timeout = 3;
  };

  # need to use the latest version for my relatively new hardware
  boot.kernelPackages = pkgs.linuxPackages_latest;

  # Networking
  networking = {
    hostName = "desktop";
    networkmanager.enable = true;
    firewall = {
      enable = true;
      allowedTCPPorts = [];
      allowedUDPPorts = [];
    };
  };

  # Time zone and locale
  time.timeZone = "Europe/Berlin";
  i18n = {
    defaultLocale = "de_DE.UTF-8";
    extraLocaleSettings = {
      LC_ADDRESS = "de_DE.UTF-8";
      LC_IDENTIFICATION = "de_DE.UTF-8";
      LC_MEASUREMENT = "de_DE.UTF-8";
      LC_MONETARY = "de_DE.UTF-8";
      LC_NAME = "de_DE.UTF-8";
      LC_NUMERIC = "de_DE.UTF-8";
      LC_PAPER = "de_DE.UTF-8";
      LC_TELEPHONE = "de_DE.UTF-8";
      LC_TIME = "de_DE.UTF-8";
    };
  };

  # Enable Hyprland
  programs.hyprland = {
    enable = true;
    xwayland.enable = true;
    # Use the withUWSM option for newer NixOS versions (25.05+)
    # withUWSM = true;  # Uncomment for NixOS 25.05+
  };

  # Ensure XDG portal for Wayland
  xdg.portal = {
    enable = true;
    wlr.enable = true;
    extraPortals = [pkgs.xdg-desktop-portal-gtk];
  };

  # Display manager
  services.greetd = {
    enable = true;
    settings = {
      default_session = {
        command = "${pkgs.tuigreet}/bin/tuigreet --time --remember --cmd Hyprland";
        user = "greeter";
      };
    };
  };

  # Fix greetd systemd service configuration
  systemd.services.greetd.serviceConfig = {
    Type = "idle";
    StandardInput = "tty";
    StandardOutput = "tty";
    StandardError = "journal"; # Without this errors will spam on screen
    # Without these bootlogs will spam on screen
    TTYReset = true;
    TTYVHangup = true;
    TTYVTDisallocate = true;
  };

  # Audio
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = true;
  };

  # OpenGL configuration moved to nvidia.nix module

  # Bluetooth
  hardware.bluetooth = {
    enable = true;
    powerOnBoot = true;
  };
  services.blueman.enable = true;

  # Printing
  services.printing.enable = true;
  services.avahi = {
    enable = true;
    nssmdns4 = true;
    openFirewall = true;
  };

  # Security
  security = {
    polkit.enable = true;
    pam.services.swaylock = {};
  };

  # User account
  users.users.chrissi = {
    isNormalUser = true;
    description = "Christoph";
    extraGroups = ["wheel" "networkmanager" "video" "audio" "input" "docker"];
    shell = pkgs.zsh;
  };

  # Enable zsh system-wide
  programs.zsh.enable = true;

  # System packages
  environment.systemPackages = with pkgs; [
    vim
    wget
    git
    htop
    btop
    networkmanagerapplet
    pavucontrol
    brightnessctl
    playerctl
  ];

  # Power management
  services.power-profiles-daemon.enable = false;
  services.tlp = {
    enable = true;
    settings = {
      # TODO: this was the old config
      CPU_SCALING_GOVERNOR_ON_AC = "performance";
      CPU_SCALING_GOVERNOR_ON_BAT = "performance";
      CPU_ENERGY_PERF_POLICY_ON_AC = "performance";
      CPU_ENERGY_PERF_POLICY_ON_BAT = "power";

      # CPU scaling for silent operation
      # CPU_SCALING_GOVERNOR_ON_AC = "powersave";
      # CPU_SCALING_GOVERNOR_ON_BAT = "powersave";
      # CPU_ENERGY_PERF_POLICY_ON_AC = "power";
      # CPU_ENERGY_PERF_POLICY_ON_BAT = "power";

      # Reduce max CPU freq for lower temps/noise
      # CPU_SCALING_MAX_FREQ_ON_AC = "2400000"; # adjust to your cpu
      # CPU_SCALING_MIN_FREQ_ON_AC = "800000";

      # Aggressive power saving
      # CPU_BOOST_ON_AC = "0";
      # CPU_HWP_DYN_BOOST_ON_AC = "0";

      # Disk power management
      # DISK_APM_LEVEL_ON_AC = "128";
      # DISK_SPINDOWN_TIMEOUT_ON_AC = "60";
    };
  };

  # Thermal management for fan control
  services.thermald = {
    enable = true;
  };

  # Turn off RGB for max stealth mode
  services.hardware.openrgb.enable = false; # or configure quiet profiles

  powerManagement = {
    enable = true;
    cpuFreqGovernor = "performance";
  };

  # Garbage collection
  nix.gc = {
    automatic = true;
    dates = "weekly";
    options = "--delete-older-than 30d";
  };

  # Experimental features
  nix.settings.experimental-features = ["nix-command" "flakes"];

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # System state version
  system.stateVersion = "25.05";
}
